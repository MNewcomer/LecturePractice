library(Rmarkdown)
library(knitr)
install.packages("RWinEdt")
library ("RWinEdt")
getwd()  # a common error is not knowing what directory R is looking at
setwd('D:/Users/Michelle Newcomer/Documents/GitHub/stat243-fall-2013/data/data')
setwd('D:/Users/Michelle Newcomer/Documents/GitHub/stat243-fall-2013/data')
setwd("~/")
getwd()  # a common error is not knowing what directory R is looking at
setwd('D:/Users/Michelle Newcomer/Documents/GitHub/stat243-fall-2013/data')
setwd('D:/Users/Michelle Newcomer/Documents/GitHub/LecturePractice/unit3')
dat <- read.table('RTADataSub.csv', sep = ',', head = TRUE)
View(dat)
View(dat)
lapply(dat, class)
dat <- read.table('RTADataSub.csv', sep = ',', head = FALSE)
View(dat)
lapply(dat, class)
levels(dat[ ,2])
sapply(dat, class)
levels(dat[ ,2])
dat2 <- read.table('RTADataSub.csv', sep = ',', head = FALSE,
na.strings = c("NA", "x"), stringsAsFactors = FALSE)
View(dat2)
View(dat2)
sapply(dat, class)
dat2 <- read.table('RTADataSub.csv', sep = ',', head = FALSE,na.strings = c("NA", "x"),stringsAsFactors = FALSE)
unique(dat2[ ,2])
sapply(dat2, class)
which(dat[ ,2] == "")
unique(dat2[ ,2])
which(dat2[ ,2] == "")
which(dat[ ,2] == "")
dat2[which(dat[, 2] == "")[1], ] # deconstruct it! [1] gives the first element
sequ <- read.table('hivSequ.csv', sep = ',', header = TRUE,colClasses = c('integer','integer','character','character','numeric','integer'))
lapply(sequ, class)
View(sequ)
sapplu(sequ,class)
dat <- readLines('precip.txt')
dat[1]
id <- as.factor(substring(dat, 4, 11) )
year <- substring(dat, 17, 20)
year[1:5]
class(year)
year <- as.integer(substring(dat, 18, 21))
month <- as.integer(substring(dat, 22, 23))
nvalues <- as.integer(substring(dat, 28, 30))
temps <- c(12.5, 37.234324, 1342434324.79997234, 2.3456e-6, 1e10)
print(temps,digits=4)
val <- 1.5
sprintf("%9.4f C", temps)
cat('My value is ', val, '.\n', sep = '')
print(paste('My value is ', val, '.', sep = ''))
x <- 7
n <- 5
# display powers
cat("Powers of", x, "\n")
cat("exponent   result\n\n")
result <- 1
for (i in 1:n) {
result <- result * x
cat(format(i, width = 8), format(result, width = 10),"\n", sep = "")
}
x <- 7
n <- 5
# display powers
cat("Powers of", x, "\n")
cat("exponent result\n\n")
result <- 1
for (i in 1:n) {
result <- result * x
cat(i, '\t', result, '\n', sep = '')
}
Sys.getlocale()
text <- "_Melhore sua seguran\xe7a_"
iconv(text, from = "latin1", to = "UTF-8")
iconv(text, from = "latin1", to = "ASCII", sub = "???")
x <- "fa\xE7ile"
Encoding(x) <- "latin1"
x
# playing around...
x <- "\xa1 \xa2 \xa3 \xf1 \xf2"
Encoding(x) <- "latin1"
x
getwd()  # a common error is not knowing what directory R is looking at
setwd('D:/Users/Michelle Newcomer/Documents/GitHub/LecturePractice/unit3')
dat <- read.table('RTADataSub.csv', sep = ',', head = FALSE)
View(dat)
lapply(dat, class)
View(dat)
levels(dat[ ,2])
View(dat)
dat2 <- read.table('RTADataSub.csv', sep = ',', head = FALSE,na.strings = c("NA", "x"),stringsAsFactors = FALSE)
levels(dat2[ ,2])
sapply(dat2, class)
unique(dat2[ ,2])
View(dat2)
which(dat[ ,2] == "")
which(dat[ ,2] == "")[1]
dat2[which(dat[, 2] == "")[1], ] # deconstruct it! [1] gives the first element
sequ <- read.table('hivSequ.csv', sep = ',', header = TRUE,colClasses = c('integer','integer','character','character','numeric','integer'))
View(sequ)
lapply(sequ, class)
sapply(sequ,class)
dat3 <- readLines('precip.txt')
fix(dat3)
fix(dat3)
id <- as.factor(substring(dat3, 4, 11) )
fix(id)
fix(dat3)
year <- substring(dat3, 17, 20)
year[1:5]
class(year)
year <- as.integer(substring(dat3, 18, 21))
class(year)
month <- as.integer(substring(dat3, 22, 23))
nvalues <- as.integer(substring(dat3, 28, 30))
dat4 <- readLines(pipe("ls -al"))
fix(dat4)
dat4 <- read.table(pipe("unzip dat.zip"))
sapply(sequ,class)
dat4 <- read.csv(gzfile("dat.csv.gz"))
dat4 <- readLines("http://www.stat.berkeley.edu/~paciorek/index.html")
fix(dat4)
con <- file("../data/precip.txt", "r") # "r" for 'read' - you can also open files for writing with "w" (or "a" for appending)
con <- file("../unit3/precip.txt", "r") # "r" for 'read' - you can also open files for writing with "w" (or "a" for appending)
fix(con)
class(con)
blockSize <- 1000 # obviously this would be large in any real application
nLines <- 300000
for(i in 1:ceiling(nLines / blockSize)){
lines <- readLines(con, n = blockSize)
# manipulate the lines and store the key stuff
}
close(con)
sear()
serch()
search()
sys.nframe()
cat('f: Two frames up is ')
dat <- readLines('precip.txt')
fix(dat)
con <- textConnection(dat[1], "r")
fix(con)
read.fwf(con, c(3,8,4,2,4,2))
fix(dat)
temps <- c(12.5, 37.234324, 1342434324.79997234, 2.3456e-6, 1e10)
sprintf("%9.4f C", temps)
sprintf("%8.4f C", temps)
sprintf("%1.4f C", temps)
dat4 <- readLines(pipe("ls -al"))
fix(dat4)
dat4 <- readLines("http://www.stat.berkeley.edu/~paciorek/index.html")
con <- file("precip.txt", "r") # "r" for 'read' - you can also open files for writing with "w" (or "a" for appending)
fix(con)
class(con)
blockSize <- 1000 # obviously this would be large in any real application
nLines <- 300000
for(i in 1:ceiling(nLines / blockSize)){
lines <- readLines(con, n = blockSize)
# manipulate the lines and store the key stuff
}
close(con)
fix(lines)
con <- file("precip.txt", "r") # "r" for 'read' - you can also open files for writing with "w" (or "a" for appending)
fix(con)
lines <- readLines(con, n = blockSize)
fix(lines)
con <- file("precip.txt", "r") # "r" for 'read' - you can also open files for writing with "w" (or "a" for appending)
class(con)
blockSize <- 1000 # obviously this would be large in any real application
nLines <- 300000
for(i in 1:ceiling(nLines / blockSize)){
lines <- readLines(con, n = blockSize)
# manipulate the lines and store the key stuff
}
close(con)
for(i in 1:ceiling(nLines/blockSize)){
lines <- readLines(con, n = blockSize)
# manipulate the lines and store the key stuff
}
con <- file("precip.txt", "r") # "r" for 'read' - you can also open files for writing with "w" (or "a" for appending)
class(con)
blockSize <- 1000 # obviously this would be large in any real application
nLines <- 300000
for(i in 1:ceiling(nLines/blockSize)){
lines <- readLines(con, n = blockSize)
# manipulate the lines and store the key stuff
}
fix(lines)
close(con)
options()$digits
sprintf("%1.4f C", temps)
sprintf("%12.4f C", temps)
sprintf("%9.2f C", temps)
val <- 1.5
cat('My value is ', val, '.\n', sep = '') #more elegant for text
print(paste('My value is ', val, '.', sep = '')) #this is a vector with elements
x <- 7
n <- 5
# display powers
cat("Powers of", x, "\n")
cat("exponent   result\n\n")
result <- 1
for (i in 1:n) {
result <- result * x
cat(format(i, width = 8), format(result, width = 10),"\n", sep = "")
}
x <- 7
n <- 5
# display powers
cat("Powers of", x, "\n")
cat("exponent result\n\n")
result <- 1
for (i in 1:n) {
result <- result * x
cat(i, '\t', result, '\n', sep = '')
}
ls
Sys.getlocale()
text <- "_Melhore sua seguran\xe7a_"
iconv(text, from = "latin1", to = "UTF-8")
iconv(text, from = "latin1", to = "ASCII", sub = "???")
x <- "fa\xE7ile"
Encoding(x) <- "latin1"
x
# playing around...
x <- "\xa1 \xa2 \xa3 \xf1 \xf2"
Encoding(x) <- "latin1"
x
load('IPs.RData') # loads in an object named 'text'
fix(text)
tmp <- substring(text, 1, 15)
fix(tmp)
tmp <- substring(text[1:6401],1,15)
fix(tmp)
fix(tmp)
tmp <- substring(text[1:6402],1,15)
fix(tmp)
text[6402] # note the Latin-1 character
text <- iconv(text, from = "latin1", to = "UTF-8")
text[6402]
tmp <- substring(text, 1, 15)
tmp[6402]
# Interesting:
table(Encoding(text))
save.image("D:/Users/Michelle Newcomer/Documents/GitHub/LecturePractice/unit3/Unit3.Rdata.RData")
save.image("D:/Users/Michelle Newcomer/Documents/GitHub/LecturePractice/unit3/Unit3.RData")
setwd("D:/Users/Michelle Newcomer/Documents/GitHub/LecturePractice/unit4")
